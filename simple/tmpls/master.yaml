#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /opt/bin/wupiao
    permissions: '0755'
    content: |
      #!/bin/bash
      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
      [ -n "$1" ] && \
        until curl -o /dev/null -sIf http://$${1}; do \
          sleep 1 && echo .;
        done;
      exit $?
  - path: /etc/etcd-config.json
    permission: '0644'
    content: |
      {
        "cluster": {
          "machines": [ "https://127.0.0.1:2379" ]
        },
        "config": {
          "caCertFiles": [ "/etc/ssl/etcd/ca.pem" ],
          "certFile": "/etc/ssl/etcd/client.pem",
          "keyFile": "/etc/ssl/etcd/client.key",
          "timeout": 1000000000
        }
      }
  - path: /etc/profile.d/etcdctl.sh
    content: |
      export ETCDCTL_ENDPOINT=https://127.0.0.1:2379
      export ETCDCTL_CERT_FILE=/etc/ssl/etcd/client.pem
      export ETCDCTL_KEY_FILE=/etc/ssl/etcd/client.key
      export ETCDCTL_CA_FILE=/etc/ssl/etcd/ca.pem
  - path: /etc/etcdctl-environment
    content: |
      ETCDCTL_ENDPOINT=https://127.0.0.1:2379
      ETCDCTL_CERT_FILE=/etc/ssl/etcd/etcd.pem
      ETCDCTL_KEY_FILE=/etc/ssl/etcd/etcd.key
      ETCDCTL_CA_FILE=/etc/ssl/etcd/ca.pem

coreos:
  etcd2:
    name: master
    advertise-client-urls: https://$private_ipv4:2379,https://$private_ipv4:4001
    initial-advertise-peer-urls: ${etcd_peer_proto}://$private_ipv4:${etcd_peer_port}
    initial-cluster: master=${etcd_peer_proto}://$private_ipv4:${etcd_peer_port}
    initial-cluster-state: new
    initial-cluster-token: k8s_etcd
    listen-client-urls: https://0.0.0.0:2379,https://0.0.0.0:4001
    listen-peer-urls: ${etcd_peer_proto}://$private_ipv4:${etcd_peer_port}
    peer-cert-file: /etc/ssl/etcd/etcd.pem
    peer-key-file: /etc/ssl/etcd/etcd.key
    peer-trusted-ca-file: /etc/ssl/etcd/ca.pem
    trusted-ca-file: /etc/ssl/etcd/ca.pem
    cert-file: /etc/ssl/etcd/etcd.pem
    key-file: /etc/ssl/etcd/etcd.key
    client-cert-auth: "true"
  fleet:
    metadata: "role=master"
    etcd_servers: https://127.0.0.1:2379
    etcd_cafile: /etc/ssl/etcd/ca.pem
    etcd_keyfile: /etc/ssl/etcd/client.key
    etcd_certfile: /etc/ssl/etcd/client.pem
    public_ip: $private_ipv4
  flannel:
    etcd_endpoints: https://127.0.0.1:2379
    etcd_cafile: /etc/ssl/etcd/ca.pem
    etcd_keyfile: /etc/ssl/etcd/client.key
    etcd_certfile: /etc/ssl/etcd/client.pem
    interface: eth1
    public_ip: $private_ipv4
  locksmith:
    endpoint: https://127.0.0.1:2379
    etcd_cafile: /etc/ssl/etcd/ca.pem
    etcd_keyfile: /etc/ssl/etcd/client.key
    etcd_certfile: /etc/ssl/etcd/client.pem
  units:
    - name: generate-serviceaccount-key.service
      command: start
      content: |
        [Unit]
        Description=Generate service-account key file

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStart=/bin/openssl genrsa -out /opt/bin/kube-serviceaccount.key 2048 2>/dev/null
        RemainAfterExit=yes
        Type=oneshot
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/cgeoffroy/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/setup-network-environment -z /opt/bin/setup-network-environment https://github.com/cgeoffroy/setup-network-environment/releases/download/v1.0.1/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment -f 169.254.0.0/16
        RemainAfterExit=yes
        Type=oneshot
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=etcd2.service
            [Service]
            EnvironmentFile=/etc/etcdctl-environment
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"${flannel_network}", "Backend": {"Type": "vxlan"}}'
    - name: docker.service
      command: start
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service etcd2.service generate-serviceaccount-key.service
        After=setup-network-environment.service etcd2.service generate-serviceaccount-key.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-apiserver -z /opt/bin/kube-apiserver https://storage.googleapis.com/kubernetes-release/release/v1.1.7/bin/linux/amd64/kube-apiserver
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
        ExecStartPre=/opt/bin/wupiao 127.0.0.1:2379/v2/machines
        ExecStart=/opt/bin/kube-apiserver \
        --service-account-key-file=/opt/bin/kube-serviceaccount.key \
        --service-account-lookup=false \
        --admission-control=NamespaceLifecycle,NamespaceAutoProvision,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota \
        --runtime-config=api/v1 \
        --allow-privileged=true \
        --insecure-bind-address=0.0.0.0 \
        --insecure-port=8080 \
        --kubelet-https=true \
        --secure-port=6443 \
        --service-cluster-ip-range=10.100.0.0/16 \
        --etcd_config=/etc/etcd-config.json
        --etcd-servers=http://127.0.0.1:2379 \
        --public-address-override=$${DEFAULT_IPV4} \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-controller-manager.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service

        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-controller-manager -z /opt/bin/kube-controller-manager https://storage.googleapis.com/kubernetes-release/release/v1.1.7/bin/linux/amd64/kube-controller-manager
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
        --service-account-private-key-file=/opt/bin/kube-serviceaccount.key \
        --master=127.0.0.1:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service

        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-scheduler -z /opt/bin/kube-scheduler https://storage.googleapis.com/kubernetes-release/release/v1.1.7/bin/linux/amd64/kube-scheduler
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
  update:
    group: alpha
    reboot-strategy: off
